# Generated by Django 5.0.4 on 2024-09-19 07:48

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Leagues',
            fields=[
                ('league_id', models.IntegerField(primary_key=True, serialize=False)),
                ('league_name', models.CharField(blank=True, max_length=500, null=True)),
                ('league_enName', models.CharField(blank=True, max_length=500, null=True)),
                ('league_faName', models.CharField(blank=True, max_length=500, null=True)),
                ('league_type', models.CharField(blank=True, max_length=50, null=True)),
                ('league_logo', models.URLField(blank=True, null=True)),
                ('league_country', models.JSONField()),
                ('league_country_flag', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LeagueTeams',
            fields=[
                ('team_id', models.IntegerField(primary_key=True, serialize=False)),
                ('team_name', models.CharField(blank=True, max_length=500, null=True)),
                ('team_faName', models.CharField(blank=True, max_length=500, null=True)),
                ('team_logo', models.URLField(blank=True, null=True)),
                ('team_code', models.CharField(blank=True, max_length=50, null=True)),
                ('team_country', models.CharField(blank=True, max_length=500, null=True)),
                ('team_faCountry', models.CharField(blank=True, max_length=500, null=True)),
                ('team_founded', models.IntegerField(blank=True, null=True)),
                ('team_national', models.BooleanField(default=False)),
                ('venue', models.JSONField()),
                ('league_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='league.leagues')),
            ],
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('start', models.DateField()),
                ('end', models.DateField()),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='league.leagues')),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('player_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=500)),
                ('faName', models.CharField(blank=True, max_length=500, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('birthDate', models.DateField(blank=True, null=True)),
                ('birthPlace', models.CharField(blank=True, max_length=500, null=True)),
                ('faBirthPlace', models.CharField(blank=True, max_length=500, null=True)),
                ('birthCountry', models.CharField(blank=True, max_length=500, null=True)),
                ('faBirthCountry', models.CharField(blank=True, max_length=500, null=True)),
                ('nationality', models.CharField(blank=True, max_length=500, null=True)),
                ('faNationality', models.CharField(blank=True, max_length=500, null=True)),
                ('height', models.CharField(blank=True, max_length=50, null=True)),
                ('weight', models.CharField(blank=True, max_length=50, null=True)),
                ('injured', models.BooleanField(default=False)),
                ('photo', models.URLField(blank=True, null=True)),
                ('appearences', models.IntegerField(blank=True, null=True)),
                ('lineups', models.IntegerField(blank=True, null=True)),
                ('minutes', models.IntegerField(blank=True, null=True)),
                ('number', models.IntegerField(blank=True, null=True)),
                ('position', models.CharField(blank=True, max_length=50, null=True)),
                ('rating', models.FloatField(blank=True, null=True)),
                ('captain', models.BooleanField(default=False)),
                ('substitutesIn', models.IntegerField(blank=True, null=True)),
                ('substitutesOut', models.IntegerField(blank=True, null=True)),
                ('bench', models.IntegerField(blank=True, null=True)),
                ('shotsTotal', models.IntegerField(blank=True, null=True)),
                ('shotsOn', models.IntegerField(blank=True, null=True)),
                ('goalsTotal', models.IntegerField(blank=True, null=True)),
                ('goalsConceded', models.IntegerField(blank=True, null=True)),
                ('assists', models.IntegerField(blank=True, null=True)),
                ('saves', models.IntegerField(blank=True, null=True)),
                ('passTotal', models.IntegerField(blank=True, null=True)),
                ('passKey', models.IntegerField(blank=True, null=True)),
                ('passAccuracy', models.FloatField(blank=True, null=True)),
                ('tacklesTotal', models.IntegerField(blank=True, null=True)),
                ('blocks', models.IntegerField(blank=True, null=True)),
                ('interceptions', models.IntegerField(blank=True, null=True)),
                ('duelsTotal', models.IntegerField(blank=True, null=True)),
                ('duelsWon', models.IntegerField(blank=True, null=True)),
                ('dribbleAttempts', models.IntegerField(blank=True, null=True)),
                ('dribbleSuccess', models.IntegerField(blank=True, null=True)),
                ('dribblePast', models.IntegerField(blank=True, null=True)),
                ('foulsDrawn', models.IntegerField(blank=True, null=True)),
                ('foulsCommitted', models.IntegerField(blank=True, null=True)),
                ('cardsYellow', models.IntegerField(blank=True, null=True)),
                ('cardsYellowRed', models.IntegerField(blank=True, null=True)),
                ('cardsRed', models.IntegerField(blank=True, null=True)),
                ('penaltyWon', models.IntegerField(blank=True, null=True)),
                ('penaltyCommited', models.IntegerField(blank=True, null=True)),
                ('penaltyScored', models.IntegerField(blank=True, null=True)),
                ('penaltyMissed', models.IntegerField(blank=True, null=True)),
                ('penaltySaved', models.IntegerField(blank=True, null=True)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='league.leagueteams')),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='league.season')),
            ],
        ),
        migrations.AddField(
            model_name='leagueteams',
            name='season',
            field=models.ManyToManyField(to='league.season'),
        ),
        migrations.CreateModel(
            name='Fixture',
            fields=[
                ('fixture_id', models.IntegerField(primary_key=True, serialize=False, unique=True)),
                ('fixture_referee', models.CharField(blank=True, max_length=250, null=True)),
                ('fixture_timestamp', models.IntegerField()),
                ('fixture_periods_first', models.IntegerField(null=True)),
                ('fixture_periods_second', models.IntegerField(null=True)),
                ('fixture_venue_name', models.CharField(blank=True, max_length=250, null=True)),
                ('fixture_venue_faName', models.CharField(blank=True, max_length=250, null=True)),
                ('fixture_venue_city', models.CharField(blank=True, max_length=250, null=True)),
                ('fixture_venue_faCity', models.CharField(blank=True, max_length=250, null=True)),
                ('fixture_status_long', models.CharField(blank=True, max_length=250, null=True)),
                ('fixture_status_short', models.CharField(blank=True, max_length=250, null=True)),
                ('fixture_status_elapsed', models.CharField(blank=True, max_length=250, null=True)),
                ('league_round', models.CharField(max_length=100)),
                ('teams_home_winner', models.BooleanField(blank=True, null=True)),
                ('teams_away_winner', models.BooleanField(blank=True, null=True)),
                ('goals', models.JSONField(blank=True, max_length=250, null=True)),
                ('score_halftime', models.JSONField(blank=True, max_length=250, null=True)),
                ('score_fulltime', models.JSONField(blank=True, max_length=250, null=True)),
                ('score_extratime', models.JSONField(blank=True, max_length=250, null=True)),
                ('score_penalty', models.JSONField(blank=True, max_length=250, null=True)),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fixtures', to='league.leagues')),
                ('teams_away', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='away_fixtures', to='league.leagueteams')),
                ('teams_home', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='home_fixtures', to='league.leagueteams')),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fixtures', to='league.season')),
            ],
        ),
    ]
